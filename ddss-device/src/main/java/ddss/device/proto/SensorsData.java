// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/sensors-data.proto

package ddss.device.proto;

/**
 * Protobuf type {@code SensorsData}
 */
public final class SensorsData extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:SensorsData)
    SensorsDataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SensorsData.newBuilder() to construct.
  private SensorsData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SensorsData() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SensorsData();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SensorsData(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            degreesCelsius_ = input.readInt32();
            break;
          }
          case 16: {

            pascals_ = input.readInt32();
            break;
          }
          case 24: {

            metersPerSecond_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ddss.device.proto.SensorsDataProto.internal_static_SensorsData_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ddss.device.proto.SensorsDataProto.internal_static_SensorsData_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ddss.device.proto.SensorsData.class, ddss.device.proto.SensorsData.Builder.class);
  }

  public static final int DEGREES_CELSIUS_FIELD_NUMBER = 1;
  private int degreesCelsius_;
  /**
   * <code>int32 degrees_celsius = 1;</code>
   * @return The degreesCelsius.
   */
  @java.lang.Override
  public int getDegreesCelsius() {
    return degreesCelsius_;
  }

  public static final int PASCALS_FIELD_NUMBER = 2;
  private int pascals_;
  /**
   * <code>int32 pascals = 2;</code>
   * @return The pascals.
   */
  @java.lang.Override
  public int getPascals() {
    return pascals_;
  }

  public static final int METERS_PER_SECOND_FIELD_NUMBER = 3;
  private int metersPerSecond_;
  /**
   * <code>int32 meters_per_second = 3;</code>
   * @return The metersPerSecond.
   */
  @java.lang.Override
  public int getMetersPerSecond() {
    return metersPerSecond_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (degreesCelsius_ != 0) {
      output.writeInt32(1, degreesCelsius_);
    }
    if (pascals_ != 0) {
      output.writeInt32(2, pascals_);
    }
    if (metersPerSecond_ != 0) {
      output.writeInt32(3, metersPerSecond_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (degreesCelsius_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, degreesCelsius_);
    }
    if (pascals_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, pascals_);
    }
    if (metersPerSecond_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, metersPerSecond_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ddss.device.proto.SensorsData)) {
      return super.equals(obj);
    }
    ddss.device.proto.SensorsData other = (ddss.device.proto.SensorsData) obj;

    if (getDegreesCelsius()
        != other.getDegreesCelsius()) return false;
    if (getPascals()
        != other.getPascals()) return false;
    if (getMetersPerSecond()
        != other.getMetersPerSecond()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DEGREES_CELSIUS_FIELD_NUMBER;
    hash = (53 * hash) + getDegreesCelsius();
    hash = (37 * hash) + PASCALS_FIELD_NUMBER;
    hash = (53 * hash) + getPascals();
    hash = (37 * hash) + METERS_PER_SECOND_FIELD_NUMBER;
    hash = (53 * hash) + getMetersPerSecond();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ddss.device.proto.SensorsData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ddss.device.proto.SensorsData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ddss.device.proto.SensorsData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ddss.device.proto.SensorsData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ddss.device.proto.SensorsData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ddss.device.proto.SensorsData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ddss.device.proto.SensorsData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ddss.device.proto.SensorsData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static ddss.device.proto.SensorsData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static ddss.device.proto.SensorsData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ddss.device.proto.SensorsData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ddss.device.proto.SensorsData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ddss.device.proto.SensorsData prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code SensorsData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:SensorsData)
      ddss.device.proto.SensorsDataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ddss.device.proto.SensorsDataProto.internal_static_SensorsData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ddss.device.proto.SensorsDataProto.internal_static_SensorsData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ddss.device.proto.SensorsData.class, ddss.device.proto.SensorsData.Builder.class);
    }

    // Construct using ddss.device.proto.SensorsData.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      degreesCelsius_ = 0;

      pascals_ = 0;

      metersPerSecond_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ddss.device.proto.SensorsDataProto.internal_static_SensorsData_descriptor;
    }

    @java.lang.Override
    public ddss.device.proto.SensorsData getDefaultInstanceForType() {
      return ddss.device.proto.SensorsData.getDefaultInstance();
    }

    @java.lang.Override
    public ddss.device.proto.SensorsData build() {
      ddss.device.proto.SensorsData result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ddss.device.proto.SensorsData buildPartial() {
      ddss.device.proto.SensorsData result = new ddss.device.proto.SensorsData(this);
      result.degreesCelsius_ = degreesCelsius_;
      result.pascals_ = pascals_;
      result.metersPerSecond_ = metersPerSecond_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ddss.device.proto.SensorsData) {
        return mergeFrom((ddss.device.proto.SensorsData)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ddss.device.proto.SensorsData other) {
      if (other == ddss.device.proto.SensorsData.getDefaultInstance()) return this;
      if (other.getDegreesCelsius() != 0) {
        setDegreesCelsius(other.getDegreesCelsius());
      }
      if (other.getPascals() != 0) {
        setPascals(other.getPascals());
      }
      if (other.getMetersPerSecond() != 0) {
        setMetersPerSecond(other.getMetersPerSecond());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ddss.device.proto.SensorsData parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ddss.device.proto.SensorsData) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int degreesCelsius_ ;
    /**
     * <code>int32 degrees_celsius = 1;</code>
     * @return The degreesCelsius.
     */
    @java.lang.Override
    public int getDegreesCelsius() {
      return degreesCelsius_;
    }
    /**
     * <code>int32 degrees_celsius = 1;</code>
     * @param value The degreesCelsius to set.
     * @return This builder for chaining.
     */
    public Builder setDegreesCelsius(int value) {
      
      degreesCelsius_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 degrees_celsius = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDegreesCelsius() {
      
      degreesCelsius_ = 0;
      onChanged();
      return this;
    }

    private int pascals_ ;
    /**
     * <code>int32 pascals = 2;</code>
     * @return The pascals.
     */
    @java.lang.Override
    public int getPascals() {
      return pascals_;
    }
    /**
     * <code>int32 pascals = 2;</code>
     * @param value The pascals to set.
     * @return This builder for chaining.
     */
    public Builder setPascals(int value) {
      
      pascals_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 pascals = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPascals() {
      
      pascals_ = 0;
      onChanged();
      return this;
    }

    private int metersPerSecond_ ;
    /**
     * <code>int32 meters_per_second = 3;</code>
     * @return The metersPerSecond.
     */
    @java.lang.Override
    public int getMetersPerSecond() {
      return metersPerSecond_;
    }
    /**
     * <code>int32 meters_per_second = 3;</code>
     * @param value The metersPerSecond to set.
     * @return This builder for chaining.
     */
    public Builder setMetersPerSecond(int value) {
      
      metersPerSecond_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 meters_per_second = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMetersPerSecond() {
      
      metersPerSecond_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:SensorsData)
  }

  // @@protoc_insertion_point(class_scope:SensorsData)
  private static final ddss.device.proto.SensorsData DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ddss.device.proto.SensorsData();
  }

  public static ddss.device.proto.SensorsData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SensorsData>
      PARSER = new com.google.protobuf.AbstractParser<SensorsData>() {
    @java.lang.Override
    public SensorsData parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SensorsData(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SensorsData> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SensorsData> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ddss.device.proto.SensorsData getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

